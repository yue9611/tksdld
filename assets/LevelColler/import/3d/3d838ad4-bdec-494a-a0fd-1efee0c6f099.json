[1,0,0,[["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2,4]],[[0,"particleItem",[{"hash":2106031806,"name":"particleItem|vs:vert|fs:atkScope","glsl4":{"vert":"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\n#if USE_INSTANCING\n  layout(location = 0) in vec4 a_matWorld0;\n  layout(location = 1) in vec4 a_matWorld1;\n  layout(location = 2) in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    layout(location = 3) in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  layout(location = 4) in float a_dyn_batch_id;\n  layout(set = 2, binding = 0) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n#endif\nlayout(location = 5) in vec3 a_position;\nlayout(location = 6) in vec2 a_texCoord;\nlayout(location = 7) in vec4 a_actionEase;\nlayout(location = 8) in vec4 a_actionPos;\nlayout(location = 9) in vec4 a_actionSO;\nlayout(location = 10) in vec4 a_actionTime;\nlayout(location = 0) out vec2 v_uv;\nlayout(location = 1) out float v_opacity;\nfloat getEaseRate (float r,float e) {\n  if (r > 1.0) {\n    r = 1.0;\n  } else if (r < 0.0) {\n    r = 0.0;\n  }\n  return r;\n}\nvec4 vert () {\n  float t = cc_time.x - a_actionTime.w;\n  vec4 p = vec4(a_position,1);\n  float r = t * a_actionTime.y;\n  r = getEaseRate(r, a_actionEase.y);\n  p.xyz *= mix(a_actionSO.x, a_actionSO.y, r);\n  r = t * a_actionTime.x;\n  r = getEaseRate(r, a_actionEase.x);\n  p.xy += mix(a_actionPos.xy, a_actionPos.zw, r);\n  mat4 matWorld;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    #else\n      matWorld = cc_matWorld;\n    #endif\n  p = cc_matViewProj * matWorld * p;\n  r = t * a_actionTime.z;\n  r = getEaseRate(r, a_actionEase.z);\n  v_opacity = mix(a_actionSO.z, a_actionSO.w, r);\n  v_uv = a_texCoord;\n  return p;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(location = 0) in vec2 v_uv;\nlayout(location = 1) in float v_opacity;\nlayout(set = 1, binding = 1) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 0) uniform Constant {\n  vec4 mainColor;\n};\nvec4 atkScope () {\n  vec4 c = mainColor;\n  c *= texture(mainTexture,v_uv);\n  c.a *= v_opacity;\n  return c;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = atkScope(); }"},"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_actionEase;\nin vec4 a_actionPos;\nin vec4 a_actionSO;\nin vec4 a_actionTime;\nout vec2 v_uv;\nout float v_opacity;\nfloat getEaseRate (float r,float e) {\n  if (r > 1.0) {\n    r = 1.0;\n  } else if (r < 0.0) {\n    r = 0.0;\n  }\n  return r;\n}\nvec4 vert () {\n  float t = cc_time.x - a_actionTime.w;\n  vec4 p = vec4(a_position,1);\n  float r = t * a_actionTime.y;\n  r = getEaseRate(r, a_actionEase.y);\n  p.xyz *= mix(a_actionSO.x, a_actionSO.y, r);\n  r = t * a_actionTime.x;\n  r = getEaseRate(r, a_actionEase.x);\n  p.xy += mix(a_actionPos.xy, a_actionPos.zw, r);\n  mat4 matWorld;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    #else\n      matWorld = cc_matWorld;\n    #endif\n  p = cc_matViewProj * matWorld * p;\n  r = t * a_actionTime.z;\n  r = getEaseRate(r, a_actionEase.z);\n  v_opacity = mix(a_actionSO.z, a_actionSO.w, r);\n  v_uv = a_texCoord;\n  return p;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nin vec2 v_uv;\nin float v_opacity;\nuniform sampler2D mainTexture;\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n};\nvec4 atkScope () {\n  vec4 c = mainColor;\n  c *= texture(mainTexture,v_uv);\n  c.a *= v_opacity;\n  return c;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = atkScope(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp vec4 cc_time;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_actionEase;\nattribute vec4 a_actionPos;\nattribute vec4 a_actionSO;\nattribute vec4 a_actionTime;\nvarying vec2 v_uv;\nvarying float v_opacity;\nfloat getEaseRate (float r,float e) {\n  if (r > 1.0) {\n    r = 1.0;\n  } else if (r < 0.0) {\n    r = 0.0;\n  }\n  return r;\n}\nvec4 vert () {\n  float t = cc_time.x - a_actionTime.w;\n  vec4 p = vec4(a_position,1);\n  float r = t * a_actionTime.y;\n  r = getEaseRate(r, a_actionEase.y);\n  p.xyz *= mix(a_actionSO.x, a_actionSO.y, r);\n  r = t * a_actionTime.x;\n  r = getEaseRate(r, a_actionEase.x);\n  p.xy += mix(a_actionPos.xy, a_actionPos.zw, r);\n  mat4 matWorld;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    #else\n      matWorld = cc_matWorld;\n    #endif\n  p = cc_matViewProj * matWorld * p;\n  r = t * a_actionTime.z;\n  r = getEaseRate(r, a_actionEase.z);\n  v_opacity = mix(a_actionSO.z, a_actionSO.w, r);\n  v_uv = a_texCoord;\n  return p;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvarying vec2 v_uv;\nvarying float v_opacity;\nuniform sampler2D mainTexture;\n   uniform vec4 mainColor;\nvec4 atkScope () {\n  vec4 c = mainColor;\n  c *= texture2D(mainTexture,v_uv);\n  c.a *= v_opacity;\n  return c;\n}\nvoid main() { gl_FragColor = atkScope(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]},{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]}],"samplerTextures":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":86,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":1}},"defines":[{"name":"USE_INSTANCING","type":"boolean","defines":[],"editor":{"elevated":true}},{"name":"USE_BATCHING","type":"boolean","defines":["!USE_INSTANCING"],"editor":{"elevated":true}},{"name":"USE_LIGHTMAP","type":"boolean","defines":["USE_INSTANCING"]}],"blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"attributes":[{"name":"a_matWorld0","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":0,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":1,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":2,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":3,"defines":["USE_INSTANCING","USE_LIGHTMAP"]},{"name":"a_dyn_batch_id","type":13,"count":1,"stageFlags":1,"format":11,"location":4,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_position","type":15,"count":1,"stageFlags":1,"format":32,"location":5,"defines":[]},{"name":"a_texCoord","type":14,"count":1,"stageFlags":1,"format":21,"location":6,"defines":[]},{"name":"a_actionEase","type":16,"count":1,"stageFlags":1,"format":44,"location":7,"defines":[]},{"name":"a_actionPos","type":16,"count":1,"stageFlags":1,"format":44,"location":8,"defines":[]},{"name":"a_actionSO","type":16,"count":1,"stageFlags":1,"format":44,"location":9,"defines":[]},{"name":"a_actionTime","type":16,"count":1,"stageFlags":1,"format":44,"location":10,"defines":[]}],"varyings":[{"name":"v_uv","type":14,"count":1,"stageFlags":1,"location":0,"defines":[]},{"name":"v_opacity","type":13,"count":1,"stageFlags":1,"location":1,"defines":[]}]}],[{"name":"transparent","passes":[{"program":"particleItem|vs:vert|fs:atkScope","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":2},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}},"mainTexture":{"value":"white","type":28}}}]}]]],0,0,[],[],[]]
